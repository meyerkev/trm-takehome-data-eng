name: docker-push

# TODO: Once we get this into production, see what inputs we care about.
on:
  workflow_dispatch:
    inputs:
      deploy_ref:
        description: "The branch, tag or SHA to make into a Docker image."
        required: true
        default: "master"
      platforms:
        description: "Comma-separated list of platform(s) to build an image for"
        required: true
        default: "linux/amd64"
  push:
    branches:
      - "master"
  pull_request:
    branches: 
      - "master"

# Add permissions block here
permissions:
  id-token: write
  contents: read

env:
  AWS_DEFAULT_REGION: us-east-2
jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          # Empty ref shows up as "Pull the commit we used to deploy this with"
          ref: ${{ github.event.inputs.deploy_ref }}
        # It remains insanely annoying that this is required b/c github.sha
        # doesn't get the sha we just checked out
      - name: "Get GIT SHA"
        id: sha
        run: echo "::set-output name=sha::$(git rev-parse HEAD)"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: 386145735201.dkr.ecr.us-east-2.amazonaws.com/trm-takehome
          tags: |
            type=ref,event=branch
            type=raw,value=${{ format('sha-{0}', steps.sha.outputs.sha) }}
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
      # - name: Login to DockerHub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::386145735201:role/github-actions-role
          aws-region: us-east-2

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v1
          
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: src
          file: src/Dockerfile
          platforms: ${{ github.event.inputs.platforms || 'linux/amd64,linux/arm64' }}
          build-args: "AWS_DEFAULT_REGION=${{ env.AWS_DEFAULT_REGION }}"
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          no-cache: true

  plan:
    runs-on: ubuntu-latest
    env:
      AWS_DEFAULT_REGION: us-east-2
      AWS_REGION: us-east-2
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          # Install tfenv 
          git clone --depth=1 https://github.com/tfutils/tfenv.git ~/.tfenv
          ln -s ~/.tfenv/bin/* /usr/local/bin
          export PATH="$HOME/.tfenv/bin:$PATH"
          cd terraform/helm/
          tfenv install
          tfenv use
      # - name: Configure AWS credentials
      #  uses: aws-actions/configure-aws-credentials@v4
      #  with:
      #    role-to-assume: arn:aws:iam::386145735201:role/github-actions-role-terraform
      #    aws-region: us-east-2
      - name: terraform plan
        id: plan
        run: |
          cd terraform/helm/
          aws sts get-caller-identity
          terraform init
          terraform plan -out plan.out
      - uses: robburger/terraform-pr-commenter@v1.5.0
        if: ${{ always() && github.ref != 'refs/heads/master' && (steps.plan.outcome == 'success' || steps.plan.outcome == 'failure') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          EXPAND_SUMMARY_DETAILS: 'true' 
        with:
          commenter_type: plan
          commenter_input: ${{ format('{0}{1}', steps.plan.outputs.stdout, steps.plan.outputs.stderr) }}
          commenter_exitcode: ${{ if steps.plan.outcome == 'success' }}0{{ else }}1{{ endif }}
  apply:
    runs-on: ubuntu-latest
    env:
      AWS_DEFAULT_REGION: us-east-2
      AWS_REGION: us-east-2
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    # https://stackoverflow.com/questions/64781462/github-actions-default-branch-variable
    if: ${{ always() && format('refs/heads/{0}', github.event.repository.default_branch) == github.ref }}
    needs: [ plan, docker ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          # Install tfenv 
          git clone --depth=1 https://github.com/tfutils/tfenv.git ~/.tfenv
          ln -s ~/.tfenv/bin/* /usr/local/bin
          export PATH="$HOME/.tfenv/bin:$PATH"
          cd terraform/helm/
          tfenv install
          tfenv use
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::386145735201:role/github-actions-role-terraform
          aws-region: us-east-2
      - name: terraform apply
        run: |
          cd terraform/helm/
          terraform init
          terraform apply plan.out